# -*- coding:utf-8 -*-
# @FileName :fasAlign2phy.py
# @Time     :2022/2/10 10:47
# @Author   :Xian

## Convert multiple sequence alignment files in fasta format to phylip format required by paml
## 批量将fasta格式的多序列比对文件转换为paml要求的phylip格式(与常见phylip格式有所区别)
## 脚本使用顺序 extractSingleCopySequence.py --> batchId2Spname.py --> batchSeqAlign.py --> fasAlign2phy.py -->delStopCodon.py

import re
from batchId2SpName import getFile
import argparse

def fas2phy(infas):
    with open(infas, 'r') as fin:
        sequences = [(m.group(1), ''.join(m.group(2).split()))
                     for m in re.finditer(r'(?m)^>([^ \n]+)[^\n]*([^>]*)', fin.read())]
        with open(infas+".phy", 'w') as fout:
            fout.write('%d %d\n' % (len(sequences), len(sequences[0][1])))
            for item in sequences:
                fout.write('%-30s %s\n' % item)

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description = "用途：将muscle多序列比对的fasta格式转换为 phylip Sequential格式(与-physout输出格式不一致)。")
    parser.add_argument("scpdir", type = str, help = "dir of singleCopySeq (type = str)") 
    parser.add_argument("-m","--malignsuffix", type = str, default = "fas", help = "multiple sequence alignment file suffixes in fasta format generated by muscle(type = str)")
    args = parser.parse_args()

    name = getFile(args.scpdir,f'.{args.malignsuffix}')
    for id in name:
        print ("\nConerting "+id )
        fas2phy(f'{args.scpdir}/{id}')
        # fas2phy("./singleCopySeq/"+id)